{
  "env": {
    "node": true,
    "jest": true
  },
  "extends": [
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier",
    "prettier/@typescript-eslint",
    "plugin:sonarjs/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": ".",
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "sonarjs",
    "import"
  ],
  "rules": {
    "import/prefer-default-export": 0,
    "import/no-cycle": 0,
    "@typescript-eslint/no-useless-constructor": 0,
    "lines-between-class-members": 0,
    "no-plusplus": 0,
    "curly": 0,
    "class-methods-use-this": 0,
    "prefer-spread": 1,
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      { 
        "selector": "LabeledStatement", 
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      { 
        "selector": "WithStatement", 
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "arrow-parens": 0,
    "no-param-reassign": 0,
    "nonblock-statement-body-position": 0,
    "implicit-arrow-linebreak": 0,
    "@typescript-eslint/explicit-function-return-type": 1,
    "@typescript-eslint/no-explicit-any": 2,
    "semi": 1,
    "@typescript-eslint/explicit-member-accessibility": 1
  }
}
